//
// AppAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class AppAPI {

    /**
     应用详情
     
     - parameter appKey: (path)  
     - parameter propCode: (query) 属性代码 (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func appInfo(appKey: String, propCode: String? = nil, apiResponseQueue: DispatchQueue = ZSGF.ClientAPI.apiResponseQueue, completion: @escaping ((_ data: AppInfoResultApiResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return appInfoWithRequestBuilder(appKey: appKey, propCode: propCode).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     应用详情
     - GET /App/{appKey}/Info
     - 根据应用Key获取应用的详细信息和属性。
     - Bearer Token:
       - type: http
       - name: Bearer
     - parameter appKey: (path)  
     - parameter propCode: (query) 属性代码 (optional)
     - returns: RequestBuilder<AppInfoResultApiResponse> 
     */
    open class func appInfoWithRequestBuilder(appKey: String, propCode: String? = nil) -> RequestBuilder<AppInfoResultApiResponse> {
        var localVariablePath = "/App/{appKey}/Info"
        let appKeyPreEscape = "\(APIHelper.mapValueToPathItem(appKey))"
        let appKeyPostEscape = appKeyPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{appKey}", with: appKeyPostEscape, options: .literal, range: nil)
        let localVariableURLString = ZSGF.ClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "propCode": (wrappedValue: propCode?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AppInfoResultApiResponse>.Type = ZSGF.ClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
