//
// AlipayAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class AlipayAPI {

    /**
     创建当面付订单
     
     - parameter appKey: (path)  
     - parameter alipayCreateOrderRequest: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func alipayCreateOrder(appKey: String, alipayCreateOrderRequest: AlipayCreateOrderRequest? = nil, apiResponseQueue: DispatchQueue = ZSGF.ClientAPI.apiResponseQueue, completion: @escaping ((_ data: StringApiResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return alipayCreateOrderWithRequestBuilder(appKey: appKey, alipayCreateOrderRequest: alipayCreateOrderRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     创建当面付订单
     - POST /Alipay/{appKey}/CreateOrder
     - 创建一个当面付订单，并返回支付二维码。
     - Bearer Token:
       - type: http
       - name: Bearer
     - parameter appKey: (path)  
     - parameter alipayCreateOrderRequest: (body)  (optional)
     - returns: RequestBuilder<StringApiResponse> 
     */
    open class func alipayCreateOrderWithRequestBuilder(appKey: String, alipayCreateOrderRequest: AlipayCreateOrderRequest? = nil) -> RequestBuilder<StringApiResponse> {
        var localVariablePath = "/Alipay/{appKey}/CreateOrder"
        let appKeyPreEscape = "\(APIHelper.mapValueToPathItem(appKey))"
        let appKeyPostEscape = appKeyPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{appKey}", with: appKeyPostEscape, options: .literal, range: nil)
        let localVariableURLString = ZSGF.ClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: alipayCreateOrderRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json-patch+json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<StringApiResponse>.Type = ZSGF.ClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     创建PC支付订单
     
     - parameter appKey: (path)  
     - parameter alipayCreateOrderPagePayRequest: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func alipayCreateOrderPagePay(appKey: String, alipayCreateOrderPagePayRequest: AlipayCreateOrderPagePayRequest? = nil, apiResponseQueue: DispatchQueue = ZSGF.ClientAPI.apiResponseQueue, completion: @escaping ((_ data: StringApiResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return alipayCreateOrderPagePayWithRequestBuilder(appKey: appKey, alipayCreateOrderPagePayRequest: alipayCreateOrderPagePayRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     创建PC支付订单
     - POST /Alipay/{appKey}/CreateOrderPagePay
     - 创建一个PC支付订单，并返回支付页面。
     - Bearer Token:
       - type: http
       - name: Bearer
     - parameter appKey: (path)  
     - parameter alipayCreateOrderPagePayRequest: (body)  (optional)
     - returns: RequestBuilder<StringApiResponse> 
     */
    open class func alipayCreateOrderPagePayWithRequestBuilder(appKey: String, alipayCreateOrderPagePayRequest: AlipayCreateOrderPagePayRequest? = nil) -> RequestBuilder<StringApiResponse> {
        var localVariablePath = "/Alipay/{appKey}/CreateOrderPagePay"
        let appKeyPreEscape = "\(APIHelper.mapValueToPathItem(appKey))"
        let appKeyPostEscape = appKeyPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{appKey}", with: appKeyPostEscape, options: .literal, range: nil)
        let localVariableURLString = ZSGF.ClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: alipayCreateOrderPagePayRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json-patch+json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<StringApiResponse>.Type = ZSGF.ClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     创建WAP支付订单
     
     - parameter appKey: (path)  
     - parameter alipayCreateOrderWapPayRequest: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func alipayCreateOrderWapPay(appKey: String, alipayCreateOrderWapPayRequest: AlipayCreateOrderWapPayRequest? = nil, apiResponseQueue: DispatchQueue = ZSGF.ClientAPI.apiResponseQueue, completion: @escaping ((_ data: StringApiResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return alipayCreateOrderWapPayWithRequestBuilder(appKey: appKey, alipayCreateOrderWapPayRequest: alipayCreateOrderWapPayRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     创建WAP支付订单
     - POST /Alipay/{appKey}/CreateOrderWapPay
     - 创建一个WAP支付订单，并返回支付页面。
     - Bearer Token:
       - type: http
       - name: Bearer
     - parameter appKey: (path)  
     - parameter alipayCreateOrderWapPayRequest: (body)  (optional)
     - returns: RequestBuilder<StringApiResponse> 
     */
    open class func alipayCreateOrderWapPayWithRequestBuilder(appKey: String, alipayCreateOrderWapPayRequest: AlipayCreateOrderWapPayRequest? = nil) -> RequestBuilder<StringApiResponse> {
        var localVariablePath = "/Alipay/{appKey}/CreateOrderWapPay"
        let appKeyPreEscape = "\(APIHelper.mapValueToPathItem(appKey))"
        let appKeyPostEscape = appKeyPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{appKey}", with: appKeyPostEscape, options: .literal, range: nil)
        let localVariableURLString = ZSGF.ClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: alipayCreateOrderWapPayRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json-patch+json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<StringApiResponse>.Type = ZSGF.ClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     获取订单详情
     
     - parameter appKey: (path)  
     - parameter orderNo: (query) 订单号 (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func alipayOrderDetail(appKey: String, orderNo: String? = nil, apiResponseQueue: DispatchQueue = ZSGF.ClientAPI.apiResponseQueue, completion: @escaping ((_ data: AlipayTradeQueryResponseApiResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return alipayOrderDetailWithRequestBuilder(appKey: appKey, orderNo: orderNo).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     获取订单详情
     - GET /Alipay/{appKey}/OrderDetail
     - 查询订单详情，包括订单状态和支付信息。
     - Bearer Token:
       - type: http
       - name: Bearer
     - parameter appKey: (path)  
     - parameter orderNo: (query) 订单号 (optional)
     - returns: RequestBuilder<AlipayTradeQueryResponseApiResponse> 
     */
    open class func alipayOrderDetailWithRequestBuilder(appKey: String, orderNo: String? = nil) -> RequestBuilder<AlipayTradeQueryResponseApiResponse> {
        var localVariablePath = "/Alipay/{appKey}/OrderDetail"
        let appKeyPreEscape = "\(APIHelper.mapValueToPathItem(appKey))"
        let appKeyPostEscape = appKeyPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{appKey}", with: appKeyPostEscape, options: .literal, range: nil)
        let localVariableURLString = ZSGF.ClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "orderNo": (wrappedValue: orderNo?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AlipayTradeQueryResponseApiResponse>.Type = ZSGF.ClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     发起订单退款
     
     - parameter appKey: (path)  
     - parameter amount: (query) 退款金额 (optional)
     - parameter orderNo: (query) 订单号 (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func alipayOrderRefund(appKey: String, amount: String? = nil, orderNo: String? = nil, apiResponseQueue: DispatchQueue = ZSGF.ClientAPI.apiResponseQueue, completion: @escaping ((_ data: AlipayTradeRefundResponseApiResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return alipayOrderRefundWithRequestBuilder(appKey: appKey, amount: amount, orderNo: orderNo).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     发起订单退款
     - POST /Alipay/{appKey}/OrderRefund
     - 对指定订单进行退款操作。
     - Bearer Token:
       - type: http
       - name: Bearer
     - parameter appKey: (path)  
     - parameter amount: (query) 退款金额 (optional)
     - parameter orderNo: (query) 订单号 (optional)
     - returns: RequestBuilder<AlipayTradeRefundResponseApiResponse> 
     */
    open class func alipayOrderRefundWithRequestBuilder(appKey: String, amount: String? = nil, orderNo: String? = nil) -> RequestBuilder<AlipayTradeRefundResponseApiResponse> {
        var localVariablePath = "/Alipay/{appKey}/OrderRefund"
        let appKeyPreEscape = "\(APIHelper.mapValueToPathItem(appKey))"
        let appKeyPostEscape = appKeyPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{appKey}", with: appKeyPostEscape, options: .literal, range: nil)
        let localVariableURLString = ZSGF.ClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "amount": (wrappedValue: amount?.encodeToJSON(), isExplode: true),
            "orderNo": (wrappedValue: orderNo?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AlipayTradeRefundResponseApiResponse>.Type = ZSGF.ClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     支付成功回调通知
     
     - parameter appKey: (path)  
     - parameter returnPageNotifyRequest: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func alipayReturnPageNotify(appKey: String, returnPageNotifyRequest: ReturnPageNotifyRequest? = nil, apiResponseQueue: DispatchQueue = ZSGF.ClientAPI.apiResponseQueue, completion: @escaping ((_ data: BooleanApiResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return alipayReturnPageNotifyWithRequestBuilder(appKey: appKey, returnPageNotifyRequest: returnPageNotifyRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     支付成功回调通知
     - POST /Alipay/{appKey}/ReturnPageNotify
     - 处理支付宝支付成功的同步通知。
     - Bearer Token:
       - type: http
       - name: Bearer
     - parameter appKey: (path)  
     - parameter returnPageNotifyRequest: (body)  (optional)
     - returns: RequestBuilder<BooleanApiResponse> 
     */
    open class func alipayReturnPageNotifyWithRequestBuilder(appKey: String, returnPageNotifyRequest: ReturnPageNotifyRequest? = nil) -> RequestBuilder<BooleanApiResponse> {
        var localVariablePath = "/Alipay/{appKey}/ReturnPageNotify"
        let appKeyPreEscape = "\(APIHelper.mapValueToPathItem(appKey))"
        let appKeyPostEscape = appKeyPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{appKey}", with: appKeyPostEscape, options: .literal, range: nil)
        let localVariableURLString = ZSGF.ClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: returnPageNotifyRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json-patch+json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<BooleanApiResponse>.Type = ZSGF.ClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
