//
// SystemFileAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class SystemFileAPI {

    /**
     创建文件夹
     
     - parameter path: (query) 文件夹路径 (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func systemFileCreateFolder(path: String? = nil, apiResponseQueue: DispatchQueue = ZSGF.ClientAPI.apiResponseQueue, completion: @escaping ((_ data: BooleanApiResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return systemFileCreateFolderWithRequestBuilder(path: path).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     创建文件夹
     - POST /SystemFile/CreateFolder
     - 根据指定路径创建文件夹
     - Bearer Token:
       - type: http
       - name: Bearer
     - parameter path: (query) 文件夹路径 (optional)
     - returns: RequestBuilder<BooleanApiResponse> 
     */
    open class func systemFileCreateFolderWithRequestBuilder(path: String? = nil) -> RequestBuilder<BooleanApiResponse> {
        let localVariablePath = "/SystemFile/CreateFolder"
        let localVariableURLString = ZSGF.ClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "path": (wrappedValue: path?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<BooleanApiResponse>.Type = ZSGF.ClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     删除文件
     
     - parameter path: (query) 文件路径 (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func systemFileDelete(path: String? = nil, apiResponseQueue: DispatchQueue = ZSGF.ClientAPI.apiResponseQueue, completion: @escaping ((_ data: BooleanApiResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return systemFileDeleteWithRequestBuilder(path: path).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     删除文件
     - DELETE /SystemFile
     - 根据指定路径删除文件
     - Bearer Token:
       - type: http
       - name: Bearer
     - parameter path: (query) 文件路径 (optional)
     - returns: RequestBuilder<BooleanApiResponse> 
     */
    open class func systemFileDeleteWithRequestBuilder(path: String? = nil) -> RequestBuilder<BooleanApiResponse> {
        let localVariablePath = "/SystemFile"
        let localVariableURLString = ZSGF.ClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "path": (wrappedValue: path?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<BooleanApiResponse>.Type = ZSGF.ClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     重命名文件
     
     - parameter sourceName: (query) 源文件名 (optional)
     - parameter destName: (query) 目标文件名 (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func systemFileRename(sourceName: String? = nil, destName: String? = nil, apiResponseQueue: DispatchQueue = ZSGF.ClientAPI.apiResponseQueue, completion: @escaping ((_ data: BooleanApiResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return systemFileRenameWithRequestBuilder(sourceName: sourceName, destName: destName).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     重命名文件
     - POST /SystemFile/Rename
     - 根据指定的源文件名和目标文件名重命名文件
     - Bearer Token:
       - type: http
       - name: Bearer
     - parameter sourceName: (query) 源文件名 (optional)
     - parameter destName: (query) 目标文件名 (optional)
     - returns: RequestBuilder<BooleanApiResponse> 
     */
    open class func systemFileRenameWithRequestBuilder(sourceName: String? = nil, destName: String? = nil) -> RequestBuilder<BooleanApiResponse> {
        let localVariablePath = "/SystemFile/Rename"
        let localVariableURLString = ZSGF.ClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "sourceName": (wrappedValue: sourceName?.encodeToJSON(), isExplode: true),
            "destName": (wrappedValue: destName?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<BooleanApiResponse>.Type = ZSGF.ClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     上传文件
     
     - parameter path: (query) 上传的路径 (optional)
     - parameter file: (form) 上传的文件 (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func systemFileUpload(path: String? = nil, file: URL? = nil, apiResponseQueue: DispatchQueue = ZSGF.ClientAPI.apiResponseQueue, completion: @escaping ((_ data: StringApiResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return systemFileUploadWithRequestBuilder(path: path, file: file).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     上传文件
     - POST /SystemFile
     - 根据指定路径上传文件
     - Bearer Token:
       - type: http
       - name: Bearer
     - parameter path: (query) 上传的路径 (optional)
     - parameter file: (form) 上传的文件 (optional)
     - returns: RequestBuilder<StringApiResponse> 
     */
    open class func systemFileUploadWithRequestBuilder(path: String? = nil, file: URL? = nil) -> RequestBuilder<StringApiResponse> {
        let localVariablePath = "/SystemFile"
        let localVariableURLString = ZSGF.ClientAPI.basePath + localVariablePath
        let localVariableFormParams: [String: Any?] = [
            "file": file?.encodeToJSON(),
        ]

        let localVariableNonNullParameters = APIHelper.rejectNil(localVariableFormParams)
        let localVariableParameters = APIHelper.convertBoolToString(localVariableNonNullParameters)

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "path": (wrappedValue: path?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "multipart/form-data",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<StringApiResponse>.Type = ZSGF.ClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     获取文件列表
     
     - parameter path: (query) 文件路径 (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func systemFiles(path: String? = nil, apiResponseQueue: DispatchQueue = ZSGF.ClientAPI.apiResponseQueue, completion: @escaping ((_ data: SystemFileListResultApiResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return systemFilesWithRequestBuilder(path: path).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     获取文件列表
     - GET /SystemFile
     - 根据指定路径获取文件列表
     - Bearer Token:
       - type: http
       - name: Bearer
     - parameter path: (query) 文件路径 (optional)
     - returns: RequestBuilder<SystemFileListResultApiResponse> 
     */
    open class func systemFilesWithRequestBuilder(path: String? = nil) -> RequestBuilder<SystemFileListResultApiResponse> {
        let localVariablePath = "/SystemFile"
        let localVariableURLString = ZSGF.ClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "path": (wrappedValue: path?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<SystemFileListResultApiResponse>.Type = ZSGF.ClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
