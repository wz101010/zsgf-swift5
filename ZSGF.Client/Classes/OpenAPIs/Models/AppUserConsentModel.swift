//
// AppUserConsentModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct AppUserConsentModel: Codable, JSONEncodable, Hashable {

    public var id: Int64?
    public var createDate: Date?
    public var lastUpdate: Date?
    public var grantType: String?
    public var redirectUri: String?
    public var remark: String?
    public var scopes: String?

    public init(id: Int64? = nil, createDate: Date? = nil, lastUpdate: Date? = nil, grantType: String? = nil, redirectUri: String? = nil, remark: String? = nil, scopes: String? = nil) {
        self.id = id
        self.createDate = createDate
        self.lastUpdate = lastUpdate
        self.grantType = grantType
        self.redirectUri = redirectUri
        self.remark = remark
        self.scopes = scopes
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case createDate
        case lastUpdate
        case grantType
        case redirectUri
        case remark
        case scopes
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(createDate, forKey: .createDate)
        try container.encodeIfPresent(lastUpdate, forKey: .lastUpdate)
        try container.encodeIfPresent(grantType, forKey: .grantType)
        try container.encodeIfPresent(redirectUri, forKey: .redirectUri)
        try container.encodeIfPresent(remark, forKey: .remark)
        try container.encodeIfPresent(scopes, forKey: .scopes)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension AppUserConsentModel: Identifiable {}
