//
// AlipayTradeQueryResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct AlipayTradeQueryResponse: Codable, JSONEncodable, Hashable {

    public var code: String?
    public var msg: String?
    public var subCode: String?
    public var subMsg: String?
    public var isError: Bool?
    public var additionalStatus: String?
    public var alipayStoreId: String?
    public var alipaySubMerchantId: String?
    public var asyncPayApplyStatus: String?
    public var authTradePayMode: String?
    public var bizSettleMode: String?
    public var bkagentRespInfo: BkAgentRespInfo?
    public var body: String?
    public var buyerLogonId: String?
    public var buyerOpenId: String?
    public var buyerPayAmount: String?
    public var buyerUserId: String?
    public var buyerUserName: String?
    public var buyerUserType: String?
    public var cashierType: String?
    public var chargeAmount: String?
    public var chargeFlags: String?
    public var chargeInfoList: [ChargeInfo]?
    public var creditBizOrderId: String?
    public var creditPayMode: String?
    public var discountAmount: String?
    public var discountGoodsDetail: String?
    public var enterprisePayInfo: EnterprisePayInfo?
    public var extInfos: String?
    public var fulfillmentDetailList: [FulfillmentDetail]?
    public var fundBillList: [TradeFundBill]?
    public var hbFqPayInfo: HbFqPayInfo?
    public var hybAmount: String?
    public var industrySepcDetail: String?
    public var industrySepcDetailAcc: String?
    public var industrySepcDetailGov: String?
    public var intactChargeInfoList: [IntactChargeInfo]?
    public var invoiceAmount: String?
    public var mdiscountAmount: String?
    public var medicalInsuranceInfo: String?
    public var openId: String?
    public var outTradeNo: String?
    public var passbackParams: String?
    public var payAmount: String?
    public var payCurrency: String?
    public var paymentInfoWithIdList: [PaymentInfoWithId]?
    public var periodScene: String?
    public var pointAmount: String?
    public var preAuthPayAmount: String?
    public var receiptAmount: String?
    public var receiptCurrencyType: String?
    public var reqGoodsDetail: [GoodsDetail]?
    public var sendPayDate: String?
    public var settleAmount: String?
    public var settleCurrency: String?
    public var settleTransRate: String?
    public var settlementId: String?
    public var storeId: String?
    public var storeName: String?
    public var subject: String?
    public var tapPayInfo: TapPayInfo?
    public var terminalId: String?
    public var totalAmount: String?
    public var tradeNo: String?
    public var tradeSettleInfo: TradeSettleInfo?
    public var tradeStatus: String?
    public var transCurrency: String?
    public var transPayRate: String?
    public var voucherDetailList: [VoucherDetail]?

    public init(code: String? = nil, msg: String? = nil, subCode: String? = nil, subMsg: String? = nil, isError: Bool? = nil, additionalStatus: String? = nil, alipayStoreId: String? = nil, alipaySubMerchantId: String? = nil, asyncPayApplyStatus: String? = nil, authTradePayMode: String? = nil, bizSettleMode: String? = nil, bkagentRespInfo: BkAgentRespInfo? = nil, body: String? = nil, buyerLogonId: String? = nil, buyerOpenId: String? = nil, buyerPayAmount: String? = nil, buyerUserId: String? = nil, buyerUserName: String? = nil, buyerUserType: String? = nil, cashierType: String? = nil, chargeAmount: String? = nil, chargeFlags: String? = nil, chargeInfoList: [ChargeInfo]? = nil, creditBizOrderId: String? = nil, creditPayMode: String? = nil, discountAmount: String? = nil, discountGoodsDetail: String? = nil, enterprisePayInfo: EnterprisePayInfo? = nil, extInfos: String? = nil, fulfillmentDetailList: [FulfillmentDetail]? = nil, fundBillList: [TradeFundBill]? = nil, hbFqPayInfo: HbFqPayInfo? = nil, hybAmount: String? = nil, industrySepcDetail: String? = nil, industrySepcDetailAcc: String? = nil, industrySepcDetailGov: String? = nil, intactChargeInfoList: [IntactChargeInfo]? = nil, invoiceAmount: String? = nil, mdiscountAmount: String? = nil, medicalInsuranceInfo: String? = nil, openId: String? = nil, outTradeNo: String? = nil, passbackParams: String? = nil, payAmount: String? = nil, payCurrency: String? = nil, paymentInfoWithIdList: [PaymentInfoWithId]? = nil, periodScene: String? = nil, pointAmount: String? = nil, preAuthPayAmount: String? = nil, receiptAmount: String? = nil, receiptCurrencyType: String? = nil, reqGoodsDetail: [GoodsDetail]? = nil, sendPayDate: String? = nil, settleAmount: String? = nil, settleCurrency: String? = nil, settleTransRate: String? = nil, settlementId: String? = nil, storeId: String? = nil, storeName: String? = nil, subject: String? = nil, tapPayInfo: TapPayInfo? = nil, terminalId: String? = nil, totalAmount: String? = nil, tradeNo: String? = nil, tradeSettleInfo: TradeSettleInfo? = nil, tradeStatus: String? = nil, transCurrency: String? = nil, transPayRate: String? = nil, voucherDetailList: [VoucherDetail]? = nil) {
        self.code = code
        self.msg = msg
        self.subCode = subCode
        self.subMsg = subMsg
        self.isError = isError
        self.additionalStatus = additionalStatus
        self.alipayStoreId = alipayStoreId
        self.alipaySubMerchantId = alipaySubMerchantId
        self.asyncPayApplyStatus = asyncPayApplyStatus
        self.authTradePayMode = authTradePayMode
        self.bizSettleMode = bizSettleMode
        self.bkagentRespInfo = bkagentRespInfo
        self.body = body
        self.buyerLogonId = buyerLogonId
        self.buyerOpenId = buyerOpenId
        self.buyerPayAmount = buyerPayAmount
        self.buyerUserId = buyerUserId
        self.buyerUserName = buyerUserName
        self.buyerUserType = buyerUserType
        self.cashierType = cashierType
        self.chargeAmount = chargeAmount
        self.chargeFlags = chargeFlags
        self.chargeInfoList = chargeInfoList
        self.creditBizOrderId = creditBizOrderId
        self.creditPayMode = creditPayMode
        self.discountAmount = discountAmount
        self.discountGoodsDetail = discountGoodsDetail
        self.enterprisePayInfo = enterprisePayInfo
        self.extInfos = extInfos
        self.fulfillmentDetailList = fulfillmentDetailList
        self.fundBillList = fundBillList
        self.hbFqPayInfo = hbFqPayInfo
        self.hybAmount = hybAmount
        self.industrySepcDetail = industrySepcDetail
        self.industrySepcDetailAcc = industrySepcDetailAcc
        self.industrySepcDetailGov = industrySepcDetailGov
        self.intactChargeInfoList = intactChargeInfoList
        self.invoiceAmount = invoiceAmount
        self.mdiscountAmount = mdiscountAmount
        self.medicalInsuranceInfo = medicalInsuranceInfo
        self.openId = openId
        self.outTradeNo = outTradeNo
        self.passbackParams = passbackParams
        self.payAmount = payAmount
        self.payCurrency = payCurrency
        self.paymentInfoWithIdList = paymentInfoWithIdList
        self.periodScene = periodScene
        self.pointAmount = pointAmount
        self.preAuthPayAmount = preAuthPayAmount
        self.receiptAmount = receiptAmount
        self.receiptCurrencyType = receiptCurrencyType
        self.reqGoodsDetail = reqGoodsDetail
        self.sendPayDate = sendPayDate
        self.settleAmount = settleAmount
        self.settleCurrency = settleCurrency
        self.settleTransRate = settleTransRate
        self.settlementId = settlementId
        self.storeId = storeId
        self.storeName = storeName
        self.subject = subject
        self.tapPayInfo = tapPayInfo
        self.terminalId = terminalId
        self.totalAmount = totalAmount
        self.tradeNo = tradeNo
        self.tradeSettleInfo = tradeSettleInfo
        self.tradeStatus = tradeStatus
        self.transCurrency = transCurrency
        self.transPayRate = transPayRate
        self.voucherDetailList = voucherDetailList
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case code
        case msg
        case subCode
        case subMsg
        case isError
        case additionalStatus
        case alipayStoreId
        case alipaySubMerchantId
        case asyncPayApplyStatus
        case authTradePayMode
        case bizSettleMode
        case bkagentRespInfo
        case body
        case buyerLogonId
        case buyerOpenId
        case buyerPayAmount
        case buyerUserId
        case buyerUserName
        case buyerUserType
        case cashierType
        case chargeAmount
        case chargeFlags
        case chargeInfoList
        case creditBizOrderId
        case creditPayMode
        case discountAmount
        case discountGoodsDetail
        case enterprisePayInfo
        case extInfos
        case fulfillmentDetailList
        case fundBillList
        case hbFqPayInfo
        case hybAmount
        case industrySepcDetail
        case industrySepcDetailAcc
        case industrySepcDetailGov
        case intactChargeInfoList
        case invoiceAmount
        case mdiscountAmount
        case medicalInsuranceInfo
        case openId
        case outTradeNo
        case passbackParams
        case payAmount
        case payCurrency
        case paymentInfoWithIdList
        case periodScene
        case pointAmount
        case preAuthPayAmount
        case receiptAmount
        case receiptCurrencyType
        case reqGoodsDetail
        case sendPayDate
        case settleAmount
        case settleCurrency
        case settleTransRate
        case settlementId
        case storeId
        case storeName
        case subject
        case tapPayInfo
        case terminalId
        case totalAmount
        case tradeNo
        case tradeSettleInfo
        case tradeStatus
        case transCurrency
        case transPayRate
        case voucherDetailList
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(code, forKey: .code)
        try container.encodeIfPresent(msg, forKey: .msg)
        try container.encodeIfPresent(subCode, forKey: .subCode)
        try container.encodeIfPresent(subMsg, forKey: .subMsg)
        try container.encodeIfPresent(isError, forKey: .isError)
        try container.encodeIfPresent(additionalStatus, forKey: .additionalStatus)
        try container.encodeIfPresent(alipayStoreId, forKey: .alipayStoreId)
        try container.encodeIfPresent(alipaySubMerchantId, forKey: .alipaySubMerchantId)
        try container.encodeIfPresent(asyncPayApplyStatus, forKey: .asyncPayApplyStatus)
        try container.encodeIfPresent(authTradePayMode, forKey: .authTradePayMode)
        try container.encodeIfPresent(bizSettleMode, forKey: .bizSettleMode)
        try container.encodeIfPresent(bkagentRespInfo, forKey: .bkagentRespInfo)
        try container.encodeIfPresent(body, forKey: .body)
        try container.encodeIfPresent(buyerLogonId, forKey: .buyerLogonId)
        try container.encodeIfPresent(buyerOpenId, forKey: .buyerOpenId)
        try container.encodeIfPresent(buyerPayAmount, forKey: .buyerPayAmount)
        try container.encodeIfPresent(buyerUserId, forKey: .buyerUserId)
        try container.encodeIfPresent(buyerUserName, forKey: .buyerUserName)
        try container.encodeIfPresent(buyerUserType, forKey: .buyerUserType)
        try container.encodeIfPresent(cashierType, forKey: .cashierType)
        try container.encodeIfPresent(chargeAmount, forKey: .chargeAmount)
        try container.encodeIfPresent(chargeFlags, forKey: .chargeFlags)
        try container.encodeIfPresent(chargeInfoList, forKey: .chargeInfoList)
        try container.encodeIfPresent(creditBizOrderId, forKey: .creditBizOrderId)
        try container.encodeIfPresent(creditPayMode, forKey: .creditPayMode)
        try container.encodeIfPresent(discountAmount, forKey: .discountAmount)
        try container.encodeIfPresent(discountGoodsDetail, forKey: .discountGoodsDetail)
        try container.encodeIfPresent(enterprisePayInfo, forKey: .enterprisePayInfo)
        try container.encodeIfPresent(extInfos, forKey: .extInfos)
        try container.encodeIfPresent(fulfillmentDetailList, forKey: .fulfillmentDetailList)
        try container.encodeIfPresent(fundBillList, forKey: .fundBillList)
        try container.encodeIfPresent(hbFqPayInfo, forKey: .hbFqPayInfo)
        try container.encodeIfPresent(hybAmount, forKey: .hybAmount)
        try container.encodeIfPresent(industrySepcDetail, forKey: .industrySepcDetail)
        try container.encodeIfPresent(industrySepcDetailAcc, forKey: .industrySepcDetailAcc)
        try container.encodeIfPresent(industrySepcDetailGov, forKey: .industrySepcDetailGov)
        try container.encodeIfPresent(intactChargeInfoList, forKey: .intactChargeInfoList)
        try container.encodeIfPresent(invoiceAmount, forKey: .invoiceAmount)
        try container.encodeIfPresent(mdiscountAmount, forKey: .mdiscountAmount)
        try container.encodeIfPresent(medicalInsuranceInfo, forKey: .medicalInsuranceInfo)
        try container.encodeIfPresent(openId, forKey: .openId)
        try container.encodeIfPresent(outTradeNo, forKey: .outTradeNo)
        try container.encodeIfPresent(passbackParams, forKey: .passbackParams)
        try container.encodeIfPresent(payAmount, forKey: .payAmount)
        try container.encodeIfPresent(payCurrency, forKey: .payCurrency)
        try container.encodeIfPresent(paymentInfoWithIdList, forKey: .paymentInfoWithIdList)
        try container.encodeIfPresent(periodScene, forKey: .periodScene)
        try container.encodeIfPresent(pointAmount, forKey: .pointAmount)
        try container.encodeIfPresent(preAuthPayAmount, forKey: .preAuthPayAmount)
        try container.encodeIfPresent(receiptAmount, forKey: .receiptAmount)
        try container.encodeIfPresent(receiptCurrencyType, forKey: .receiptCurrencyType)
        try container.encodeIfPresent(reqGoodsDetail, forKey: .reqGoodsDetail)
        try container.encodeIfPresent(sendPayDate, forKey: .sendPayDate)
        try container.encodeIfPresent(settleAmount, forKey: .settleAmount)
        try container.encodeIfPresent(settleCurrency, forKey: .settleCurrency)
        try container.encodeIfPresent(settleTransRate, forKey: .settleTransRate)
        try container.encodeIfPresent(settlementId, forKey: .settlementId)
        try container.encodeIfPresent(storeId, forKey: .storeId)
        try container.encodeIfPresent(storeName, forKey: .storeName)
        try container.encodeIfPresent(subject, forKey: .subject)
        try container.encodeIfPresent(tapPayInfo, forKey: .tapPayInfo)
        try container.encodeIfPresent(terminalId, forKey: .terminalId)
        try container.encodeIfPresent(totalAmount, forKey: .totalAmount)
        try container.encodeIfPresent(tradeNo, forKey: .tradeNo)
        try container.encodeIfPresent(tradeSettleInfo, forKey: .tradeSettleInfo)
        try container.encodeIfPresent(tradeStatus, forKey: .tradeStatus)
        try container.encodeIfPresent(transCurrency, forKey: .transCurrency)
        try container.encodeIfPresent(transPayRate, forKey: .transPayRate)
        try container.encodeIfPresent(voucherDetailList, forKey: .voucherDetailList)
    }
}

