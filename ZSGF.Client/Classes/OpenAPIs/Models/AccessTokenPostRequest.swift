//
// AccessTokenPostRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct AccessTokenPostRequest: Codable, JSONEncodable, Hashable {

    public static let titleRule = StringRule(minLength: 1, maxLength: nil, pattern: nil)
    public static let expireInDaysRule = NumericRule<Int>(minimum: -1, exclusiveMinimum: false, maximum: 3650, exclusiveMaximum: false, multipleOf: nil)
    public var title: String
    public var tags: String?
    public var userID: Int64?
    public var description: String?
    public var permissions: String?
    public var expireInDays: Int?

    public init(title: String, tags: String? = nil, userID: Int64? = nil, description: String? = nil, permissions: String? = nil, expireInDays: Int? = nil) {
        self.title = title
        self.tags = tags
        self.userID = userID
        self.description = description
        self.permissions = permissions
        self.expireInDays = expireInDays
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case title
        case tags
        case userID
        case description
        case permissions
        case expireInDays
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(title, forKey: .title)
        try container.encodeIfPresent(tags, forKey: .tags)
        try container.encodeIfPresent(userID, forKey: .userID)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(permissions, forKey: .permissions)
        try container.encodeIfPresent(expireInDays, forKey: .expireInDays)
    }
}

