//
// AppUserListResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct AppUserListResponse: Codable, JSONEncodable, Hashable {

    /** 用户ID */
    public var id: Int64?
    /** 用户的联合ID */
    public var unionID: String?
    /** 用户所在平台 */
    public var platform: String?
    /** 用户名 */
    public var userName: String?
    /** 用户昵称 */
    public var nickName: String?
    /** 用户邮箱 */
    public var email: String?
    /** 用户电话 */
    public var phone: String?
    /** 用户头像URL */
    public var avatar: String?
    /** 用户角色 */
    public var role: String?
    /** 用户角色ID */
    public var roleID: Int64?
    /** 用户创建日期 */
    public var createDate: Date?
    /** 用户最后更新日期 */
    public var lastUpdate: Date?

    public init(id: Int64? = nil, unionID: String? = nil, platform: String? = nil, userName: String? = nil, nickName: String? = nil, email: String? = nil, phone: String? = nil, avatar: String? = nil, role: String? = nil, roleID: Int64? = nil, createDate: Date? = nil, lastUpdate: Date? = nil) {
        self.id = id
        self.unionID = unionID
        self.platform = platform
        self.userName = userName
        self.nickName = nickName
        self.email = email
        self.phone = phone
        self.avatar = avatar
        self.role = role
        self.roleID = roleID
        self.createDate = createDate
        self.lastUpdate = lastUpdate
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case unionID
        case platform
        case userName
        case nickName
        case email
        case phone
        case avatar
        case role
        case roleID
        case createDate
        case lastUpdate
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(unionID, forKey: .unionID)
        try container.encodeIfPresent(platform, forKey: .platform)
        try container.encodeIfPresent(userName, forKey: .userName)
        try container.encodeIfPresent(nickName, forKey: .nickName)
        try container.encodeIfPresent(email, forKey: .email)
        try container.encodeIfPresent(phone, forKey: .phone)
        try container.encodeIfPresent(avatar, forKey: .avatar)
        try container.encodeIfPresent(role, forKey: .role)
        try container.encodeIfPresent(roleID, forKey: .roleID)
        try container.encodeIfPresent(createDate, forKey: .createDate)
        try container.encodeIfPresent(lastUpdate, forKey: .lastUpdate)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension AppUserListResponse: Identifiable {}
