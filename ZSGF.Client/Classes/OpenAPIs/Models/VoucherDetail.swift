//
// VoucherDetail.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct VoucherDetail: Codable, JSONEncodable, Hashable {

    public var amount: String?
    public var id: String?
    public var memo: String?
    public var merchantContribute: String?
    public var name: String?
    public var otherContribute: String?
    public var otherContributeDetail: [ContributeDetail]?
    public var purchaseAntContribute: String?
    public var purchaseBuyerContribute: String?
    public var purchaseMerchantContribute: String?
    public var templateId: String?
    public var type: String?

    public init(amount: String? = nil, id: String? = nil, memo: String? = nil, merchantContribute: String? = nil, name: String? = nil, otherContribute: String? = nil, otherContributeDetail: [ContributeDetail]? = nil, purchaseAntContribute: String? = nil, purchaseBuyerContribute: String? = nil, purchaseMerchantContribute: String? = nil, templateId: String? = nil, type: String? = nil) {
        self.amount = amount
        self.id = id
        self.memo = memo
        self.merchantContribute = merchantContribute
        self.name = name
        self.otherContribute = otherContribute
        self.otherContributeDetail = otherContributeDetail
        self.purchaseAntContribute = purchaseAntContribute
        self.purchaseBuyerContribute = purchaseBuyerContribute
        self.purchaseMerchantContribute = purchaseMerchantContribute
        self.templateId = templateId
        self.type = type
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case amount
        case id
        case memo
        case merchantContribute
        case name
        case otherContribute
        case otherContributeDetail
        case purchaseAntContribute
        case purchaseBuyerContribute
        case purchaseMerchantContribute
        case templateId
        case type
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(amount, forKey: .amount)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(memo, forKey: .memo)
        try container.encodeIfPresent(merchantContribute, forKey: .merchantContribute)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(otherContribute, forKey: .otherContribute)
        try container.encodeIfPresent(otherContributeDetail, forKey: .otherContributeDetail)
        try container.encodeIfPresent(purchaseAntContribute, forKey: .purchaseAntContribute)
        try container.encodeIfPresent(purchaseBuyerContribute, forKey: .purchaseBuyerContribute)
        try container.encodeIfPresent(purchaseMerchantContribute, forKey: .purchaseMerchantContribute)
        try container.encodeIfPresent(templateId, forKey: .templateId)
        try container.encodeIfPresent(type, forKey: .type)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension VoucherDetail: Identifiable {}
