//
// FollowerModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct FollowerModel: Codable, JSONEncodable, Hashable {

    /** 用户ID */
    public var id: Int64?
    /** 目标用户ID */
    public var targetUserID: Int64?
    /** 别名 */
    public var alias: String?
    /** 昵称 */
    public var nickName: String?
    /** 头像 */
    public var avatar: String?
    /** 是否互相关注 */
    public var isMutual: Bool?
    /** 亲密度分数 */
    public var closenessScore: Int64?
    /** 关注度分数 */
    public var attentionScore: Int64?
    /** 标签 */
    public var tags: String?
    /** 状态 */
    public var status: String?
    /** 备注 */
    public var remark: String?
    /** 创建日期 */
    public var createDate: Date?

    public init(id: Int64? = nil, targetUserID: Int64? = nil, alias: String? = nil, nickName: String? = nil, avatar: String? = nil, isMutual: Bool? = nil, closenessScore: Int64? = nil, attentionScore: Int64? = nil, tags: String? = nil, status: String? = nil, remark: String? = nil, createDate: Date? = nil) {
        self.id = id
        self.targetUserID = targetUserID
        self.alias = alias
        self.nickName = nickName
        self.avatar = avatar
        self.isMutual = isMutual
        self.closenessScore = closenessScore
        self.attentionScore = attentionScore
        self.tags = tags
        self.status = status
        self.remark = remark
        self.createDate = createDate
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case targetUserID
        case alias
        case nickName
        case avatar
        case isMutual
        case closenessScore
        case attentionScore
        case tags
        case status
        case remark
        case createDate
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(targetUserID, forKey: .targetUserID)
        try container.encodeIfPresent(alias, forKey: .alias)
        try container.encodeIfPresent(nickName, forKey: .nickName)
        try container.encodeIfPresent(avatar, forKey: .avatar)
        try container.encodeIfPresent(isMutual, forKey: .isMutual)
        try container.encodeIfPresent(closenessScore, forKey: .closenessScore)
        try container.encodeIfPresent(attentionScore, forKey: .attentionScore)
        try container.encodeIfPresent(tags, forKey: .tags)
        try container.encodeIfPresent(status, forKey: .status)
        try container.encodeIfPresent(remark, forKey: .remark)
        try container.encodeIfPresent(createDate, forKey: .createDate)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension FollowerModel: Identifiable {}
