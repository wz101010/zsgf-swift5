//
// UserLogins.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** 用户外部账号 */
public struct UserLogins: Codable, JSONEncodable, Hashable {

    public static let platformNameRule = StringRule(minLength: nil, maxLength: 50, pattern: nil)
    public static let platformRule = StringRule(minLength: nil, maxLength: 50, pattern: nil)
    public static let unionIDRule = StringRule(minLength: nil, maxLength: 100, pattern: nil)
    public static let avatarRule = StringRule(minLength: nil, maxLength: 255, pattern: nil)
    /** 唯一标识符 */
    public var id: Int64?
    /** 关联的用户ID */
    public var userID: Int64?
    /** 第三方平台名称 */
    public var platformName: String?
    /** 第三方平台 */
    public var platform: String?
    /** 第三方平台唯一标识 */
    public var unionID: String?
    /** 用户头像 */
    public var avatar: String?
    /** 扩展数据 */
    public var data: String?
    /** 启用 */
    public var enable: Bool?
    /** 创建时间 */
    public var createDate: Date?
    /** 最后更新时间 */
    public var lastUpdate: Date?

    public init(id: Int64? = nil, userID: Int64? = nil, platformName: String? = nil, platform: String? = nil, unionID: String? = nil, avatar: String? = nil, data: String? = nil, enable: Bool? = nil, createDate: Date? = nil, lastUpdate: Date? = nil) {
        self.id = id
        self.userID = userID
        self.platformName = platformName
        self.platform = platform
        self.unionID = unionID
        self.avatar = avatar
        self.data = data
        self.enable = enable
        self.createDate = createDate
        self.lastUpdate = lastUpdate
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case userID
        case platformName
        case platform
        case unionID
        case avatar
        case data
        case enable
        case createDate
        case lastUpdate
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(userID, forKey: .userID)
        try container.encodeIfPresent(platformName, forKey: .platformName)
        try container.encodeIfPresent(platform, forKey: .platform)
        try container.encodeIfPresent(unionID, forKey: .unionID)
        try container.encodeIfPresent(avatar, forKey: .avatar)
        try container.encodeIfPresent(data, forKey: .data)
        try container.encodeIfPresent(enable, forKey: .enable)
        try container.encodeIfPresent(createDate, forKey: .createDate)
        try container.encodeIfPresent(lastUpdate, forKey: .lastUpdate)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension UserLogins: Identifiable {}
