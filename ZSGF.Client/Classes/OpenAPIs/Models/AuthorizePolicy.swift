//
// AuthorizePolicy.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** 鉴权策略实体，用于定义和管理系统的鉴权规则。 */
public struct AuthorizePolicy: Codable, JSONEncodable, Hashable {

    public static let authorizeTypeRule = StringRule(minLength: nil, maxLength: 50, pattern: nil)
    /** 鉴权策略的唯一标识符。 */
    public var id: Int64?
    /** 鉴权策略的名称。根据鉴权类型填写不同的名称：角色类型填写角色名称，用户类型填写用户ID，访问令牌类型填写令牌ID。 */
    public var policyName: String?
    /** 鉴权策略的类型，可选值为 'access_token', 'user', 或 'role'。 */
    public var authorizeType: String?
    /** 与鉴权策略关联的权限集合，多个权限可以用逗号分隔。 */
    public var policyValue: String?
    /** 鉴权策略的创建日期，默认为当前时间。 */
    public var createDate: Date?
    /** 鉴权策略的最后更新日期，默认为当前时间。 */
    public var lastUpdate: Date?

    public init(id: Int64? = nil, policyName: String? = nil, authorizeType: String? = nil, policyValue: String? = nil, createDate: Date? = nil, lastUpdate: Date? = nil) {
        self.id = id
        self.policyName = policyName
        self.authorizeType = authorizeType
        self.policyValue = policyValue
        self.createDate = createDate
        self.lastUpdate = lastUpdate
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case policyName
        case authorizeType
        case policyValue
        case createDate
        case lastUpdate
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(policyName, forKey: .policyName)
        try container.encodeIfPresent(authorizeType, forKey: .authorizeType)
        try container.encodeIfPresent(policyValue, forKey: .policyValue)
        try container.encodeIfPresent(createDate, forKey: .createDate)
        try container.encodeIfPresent(lastUpdate, forKey: .lastUpdate)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension AuthorizePolicy: Identifiable {}
