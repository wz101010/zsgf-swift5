//
// Team.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** 团队 */
public struct Team: Codable, JSONEncodable, Hashable {

    public static let channelCodeRule = StringRule(minLength: nil, maxLength: 50, pattern: nil)
    public static let channelAppIDRule = StringRule(minLength: nil, maxLength: 50, pattern: nil)
    public static let roleRule = StringRule(minLength: nil, maxLength: 50, pattern: nil)
    public static let permissionRule = StringRule(minLength: nil, maxLength: 50, pattern: nil)
    /** ID */
    public var id: Int64?
    /** 用户ID */
    public var userID: Int64?
    /** 渠道代码 */
    public var channelCode: String?
    /** 渠道应用ID */
    public var channelAppID: String?
    /** 角色 */
    public var role: String?
    /** 权限 */
    public var permission: String?
    /** 是否显示 */
    public var show: Bool?
    /** 显示顺序 */
    public var showIndex: Int64?
    /** 创建日期 */
    public var createDate: Date?
    /** 最后更新日期 */
    public var lastUpdate: Date?

    public init(id: Int64? = nil, userID: Int64? = nil, channelCode: String? = nil, channelAppID: String? = nil, role: String? = nil, permission: String? = nil, show: Bool? = nil, showIndex: Int64? = nil, createDate: Date? = nil, lastUpdate: Date? = nil) {
        self.id = id
        self.userID = userID
        self.channelCode = channelCode
        self.channelAppID = channelAppID
        self.role = role
        self.permission = permission
        self.show = show
        self.showIndex = showIndex
        self.createDate = createDate
        self.lastUpdate = lastUpdate
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case userID
        case channelCode
        case channelAppID
        case role
        case permission
        case show
        case showIndex
        case createDate
        case lastUpdate
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(userID, forKey: .userID)
        try container.encodeIfPresent(channelCode, forKey: .channelCode)
        try container.encodeIfPresent(channelAppID, forKey: .channelAppID)
        try container.encodeIfPresent(role, forKey: .role)
        try container.encodeIfPresent(permission, forKey: .permission)
        try container.encodeIfPresent(show, forKey: .show)
        try container.encodeIfPresent(showIndex, forKey: .showIndex)
        try container.encodeIfPresent(createDate, forKey: .createDate)
        try container.encodeIfPresent(lastUpdate, forKey: .lastUpdate)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension Team: Identifiable {}
