//
// AppSetting.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** 应用设置 */
public struct AppSetting: Codable, JSONEncodable, Hashable {

    public static let providerCodeRule = StringRule(minLength: nil, maxLength: 50, pattern: nil)
    public static let groupCodeRule = StringRule(minLength: nil, maxLength: 50, pattern: nil)
    public static let codeRule = StringRule(minLength: 1, maxLength: 50, pattern: nil)
    public static let valueRule = StringRule(minLength: 1, maxLength: nil, pattern: nil)
    public static let tagsRule = StringRule(minLength: nil, maxLength: 255, pattern: nil)
    public static let descriptionRule = StringRule(minLength: nil, maxLength: 255, pattern: nil)
    /** 唯一标识 */
    public var id: Int64?
    /** 提供商代码 */
    public var providerCode: String?
    /** 分组代码 */
    public var groupCode: String?
    /** 设置项代码 */
    public var code: String
    /** 设置值 */
    public var value: String
    /** 标签 */
    public var tags: String?
    /** 描述 */
    public var description: String?
    /** 是否在前端可用 */
    public var frontendUsable: Bool?
    /** 创建时间 */
    public var createDate: Date?
    /** 最后更新时间 */
    public var lastUpdate: Date?

    public init(id: Int64? = nil, providerCode: String? = nil, groupCode: String? = nil, code: String, value: String, tags: String? = nil, description: String? = nil, frontendUsable: Bool? = nil, createDate: Date? = nil, lastUpdate: Date? = nil) {
        self.id = id
        self.providerCode = providerCode
        self.groupCode = groupCode
        self.code = code
        self.value = value
        self.tags = tags
        self.description = description
        self.frontendUsable = frontendUsable
        self.createDate = createDate
        self.lastUpdate = lastUpdate
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case providerCode
        case groupCode
        case code
        case value
        case tags
        case description
        case frontendUsable
        case createDate
        case lastUpdate
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(providerCode, forKey: .providerCode)
        try container.encodeIfPresent(groupCode, forKey: .groupCode)
        try container.encode(code, forKey: .code)
        try container.encode(value, forKey: .value)
        try container.encodeIfPresent(tags, forKey: .tags)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(frontendUsable, forKey: .frontendUsable)
        try container.encodeIfPresent(createDate, forKey: .createDate)
        try container.encodeIfPresent(lastUpdate, forKey: .lastUpdate)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension AppSetting: Identifiable {}
