//
// ListResponseItem.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ListResponseItem: Codable, JSONEncodable, Hashable {

    public var id: Int64?
    public var userID: Int64?
    public var userName: String?
    public var nickName: String?
    public var avatar: String?
    public var email: String?
    public var phone: String?
    public var role: String?
    public var permission: String?
    public var lastUpdate: Date?

    public init(id: Int64? = nil, userID: Int64? = nil, userName: String? = nil, nickName: String? = nil, avatar: String? = nil, email: String? = nil, phone: String? = nil, role: String? = nil, permission: String? = nil, lastUpdate: Date? = nil) {
        self.id = id
        self.userID = userID
        self.userName = userName
        self.nickName = nickName
        self.avatar = avatar
        self.email = email
        self.phone = phone
        self.role = role
        self.permission = permission
        self.lastUpdate = lastUpdate
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case userID
        case userName
        case nickName
        case avatar
        case email
        case phone
        case role
        case permission
        case lastUpdate
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(userID, forKey: .userID)
        try container.encodeIfPresent(userName, forKey: .userName)
        try container.encodeIfPresent(nickName, forKey: .nickName)
        try container.encodeIfPresent(avatar, forKey: .avatar)
        try container.encodeIfPresent(email, forKey: .email)
        try container.encodeIfPresent(phone, forKey: .phone)
        try container.encodeIfPresent(role, forKey: .role)
        try container.encodeIfPresent(permission, forKey: .permission)
        try container.encodeIfPresent(lastUpdate, forKey: .lastUpdate)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension ListResponseItem: Identifiable {}
